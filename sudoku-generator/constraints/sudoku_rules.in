% Define the problem: Sudoku grid constraints
formulas(assumptions).

    % Define valid rows and columns (1 through 9)
    all R (row(R) -> R = 1 | R = 2 | R = 3 | R = 4 | R = 5 | R = 6 | R = 7 | R = 8 | R = 9).
    all C (col(C) -> C = 1 | C = 2 | C = 3 | C = 4 | C = 5 | C = 6 | C = 7 | C = 8 | C = 9).

    % Each cell contains exactly one value (1 through 9)
    all R all C (cell(R, C) ->
        (value(R, C, 1) | value(R, C, 2) | value(R, C, 3) | value(R, C, 4) |
         value(R, C, 5) | value(R, C, 6) | value(R, C, 7) | value(R, C, 8) | value(R, C, 9))).
    all R all C all V1 all V2 (
        (value(R, C, V1) & value(R, C, V2)) -> V1 = V2
    ).

    % Row uniqueness: No two cells in the same row can have the same value
    all R all C1 all C2 all V (
        (C1 != C2 & value(R, C1, V) & value(R, C2, V)) -> false
    ).

    % Column uniqueness: No two cells in the same column can have the same value
    all C all R1 all R2 all V (
        (R1 != R2 & value(R1, C, V) & value(R2, C, V)) -> false
    ).

    % Subgrid membership definition: Explicitly define subgrid membership
    % Subgrid 1 (top-left)
    subgrid(1, 1). subgrid(1, 2). subgrid(1, 3).
    subgrid(2, 1). subgrid(2, 2). subgrid(2, 3).
    subgrid(3, 1). subgrid(3, 2). subgrid(3, 3).

    % Subgrid 2 (top-middle)
    subgrid(1, 4). subgrid(1, 5). subgrid(1, 6).
    subgrid(2, 4). subgrid(2, 5). subgrid(2, 6).
    subgrid(3, 4). subgrid(3, 5). subgrid(3, 6).

    % Subgrid 3 (top-right)
    subgrid(1, 7). subgrid(1, 8). subgrid(1, 9).
    subgrid(2, 7). subgrid(2, 8). subgrid(2, 9).
    subgrid(3, 7). subgrid(3, 8). subgrid(3, 9).

    % Subgrid 4 (middle-left)
    subgrid(4, 1). subgrid(4, 2). subgrid(4, 3).
    subgrid(5, 1). subgrid(5, 2). subgrid(5, 3).
    subgrid(6, 1). subgrid(6, 2). subgrid(6, 3).

    % Subgrid 5 (middle-middle)
    subgrid(4, 4). subgrid(4, 5). subgrid(4, 6).
    subgrid(5, 4). subgrid(5, 5). subgrid(5, 6).
    subgrid(6, 4). subgrid(6, 5). subgrid(6, 6).

    % Subgrid 6 (middle-right)
    subgrid(4, 7). subgrid(4, 8). subgrid(4, 9).
    subgrid(5, 7). subgrid(5, 8). subgrid(5, 9).
    subgrid(6, 7). subgrid(6, 8). subgrid(6, 9).
    
    % Subgrid 7 (bottom-left)
    subgrid(7, 1). subgrid(7, 2). subgrid(7, 3).
    subgrid(8, 1). subgrid(8, 2). subgrid(8, 3).
    subgrid(9, 1). subgrid(9, 2). subgrid(9, 3).

    % Subgrid 8 (bottom-middle)
    subgrid(7, 4). subgrid(7, 5). subgrid(7, 6).
    subgrid(8, 4). subgrid(8, 5). subgrid(8, 6).
    subgrid(9, 4). subgrid(9, 5). subgrid(9, 6).

    % Subgrid 9 (bottom-right)
    subgrid(7, 7). subgrid(7, 8). subgrid(7, 9).
    subgrid(8, 7). subgrid(8, 8). subgrid(8, 9).
    subgrid(9, 7). subgrid(9, 8). subgrid(9, 9).

    % Define subgrid uniqueness: Each subgrid must have unique values
    all R1 all C1 all R2 all C2 all V (
        (subgrid(R1, C1) & subgrid(R2, C2) & value(R1, C1, V) & value(R2, C2, V) -> 
        (R1 = R2 & C1 = C2))
    ).

end_of_list.