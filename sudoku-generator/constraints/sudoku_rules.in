assign(domain_size, 9).      % for a 9x9 puzzle

formulas(rules).

   % one value should appear once in each row.
   all x all y1 all y2 (f(x, y1) = f(x, y2) -> y1 = y2).

   % one value should appear once in each column.
   all x1 all x2 all y (f(x1, y) = f(x2, y) -> x1 = x2).


   % the subgrids are {0,1,2}, {3,4,5}, {6,7,8}, we define its rules;

   all x one_subgrid(x,x).
   all x all y (one_subgrid(x,y) -> one_subgrid(y,x)).
   all x all y all z (one_subgrid(x,y) & one_subgrid(y,z) -> one_subgrid(x,z)).

   %These are the necesarry subgrid definitions which force the one subgrid rule on the entire grid

   one_subgrid(0,1).
   one_subgrid(1,2).

   one_subgrid(3,4).
   one_subgrid(4,5).

   one_subgrid(6,7).
   one_subgrid(7,8).

   -one_subgrid(0,3).
   -one_subgrid(3,6).
   -one_subgrid(0,6).

   % Defining the at most one of each in each subgrid rule.
   all x1 all y1 all x2 all y2
      (
         one_subgrid(x1,x2) &
         one_subgrid(y1,y2) &
         f(x1, y1) = f(x2, y2)
      ->
         x1 = x2 &
         y1 = y2 
      ).

end_of_list.

formulas(sample_puzzle).
   % values can be difine for generating a specific grid.
   f(1,6) = 4.

end_of_list.